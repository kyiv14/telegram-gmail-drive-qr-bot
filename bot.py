import logging
from telegram import Update, InlineKeyboardMarkup, InlineKeyboardButton, InputFile
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, filters, ContextTypes, CallbackQueryHandler
import os
import io
import csv
import base64
import numpy as np
import cv2
from PIL import Image
import tempfile

logging.basicConfig(level=logging.INFO)
TOKEN = "7490249052:AAEaldElMOFFJwn9WIvuSR0bx6tFaebeR0k"

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "üëã –ü—Ä–∏–≤–µ—Ç! –ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—ã:\n"
        "/gmail ‚Äî —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –≤–∞—Ä–∏–∞–Ω—Ç—ã email\n"
        "/drive ‚Äî —Å–¥–µ–ª–∞—Ç—å –ø—Ä—è–º—É—é —Å—Å—ã–ª–∫—É\n"
        "/qr ‚Äî —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å QR –∏–∑ –∫–∞—Ä—Ç–∏–Ω–∫–∏"
    )

async def gmail(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üìß –í–≤–µ–¥–∏ —Å–≤–æ–π –∞–¥—Ä–µ—Å Gmail (–±–µ–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤):")

async def drive(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üîó –í—Å—Ç–∞–≤—å —Å—Å—ã–ª–∫—É –Ω–∞ —Ñ–∞–π–ª —Å Google –î–∏—Å–∫–∞:")

async def qr(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üì∑ –û—Ç–ø—Ä–∞–≤—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å QR-–∫–æ–¥–æ–º.")

def main():
    app = ApplicationBuilder().token(TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("gmail", gmail))
    app.add_handler(CommandHandler("drive", drive))
    app.add_handler(CommandHandler("qr", qr))
    app.run_polling()

if __name__ == '__main__':
    main()